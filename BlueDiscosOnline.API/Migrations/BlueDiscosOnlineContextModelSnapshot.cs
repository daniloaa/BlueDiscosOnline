// <auto-generated />
using System;
using BlueDiscosOnline.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlueDiscosOnline.API.Migrations
{
    [DbContext(typeof(BlueDiscosOnlineContext))]
    partial class BlueDiscosOnlineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.Album", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Artista");

                    b.Property<long>("GeneroId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.Genero", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.GeneroPercentualDia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DiaSemana")
                        .HasColumnName("DiaSemana");

                    b.Property<long>("GeneroId");

                    b.Property<int>("Percentual");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("GeneroPercentualDia");
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.Venda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataVenda");

                    b.Property<decimal>("ValorCashBackTotal")
                        .HasColumnName("ValorCashBackTotal");

                    b.HasKey("Id");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.VendaItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AlbumId")
                        .HasColumnName("AlbumId");

                    b.Property<decimal>("ValorCashBack");

                    b.Property<long>("VendaId")
                        .HasColumnName("VendaId");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendaItem");
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.Album", b =>
                {
                    b.HasOne("BlueDiscosOnline.Domain.Entities.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.GeneroPercentualDia", b =>
                {
                    b.HasOne("BlueDiscosOnline.Domain.Entities.Genero", "Genero")
                        .WithMany("PercentualDia")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlueDiscosOnline.Domain.Entities.VendaItem", b =>
                {
                    b.HasOne("BlueDiscosOnline.Domain.Entities.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDiscosOnline.Domain.Entities.Venda", "Venda")
                        .WithMany("Itens")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
